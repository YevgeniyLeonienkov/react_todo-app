{"version":3,"sources":["components/NewTodo.jsx","components/Header.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","utils.js","App.js","index.js"],"names":["AddNewTodo","state","valuesMap","title","handleFormSubmit","event","preventDefault","_this","props","onSubmit","Object","objectSpread","completed","id","Date","setState","handleFieldChange","_event$target","target","name","value","prevState","defineProperty","this","react_default","a","createElement","onChange","autoComplete","className","placeholder","React","Component","defaultProps","Header","_ref","addTodo","todos","NewTodo","TodoItem","isEditing","currentTitle","currentId","handleStartEditing","todo","_this$state","onChangeSubmit","_this$props","handleTodoToggle","handleDestroyTodo","_this$state2","checked","type","htmlFor","onDoubleClick","onClick","TodoList","allToggle","handleAllToggle","getClassesAllToggle","classnames","toggle-all","toggle-all--active","map","todoItem","components_TodoItem","key","Footer","handleDestroyCompleted","handleFilter","concat","filter","length","href","some","style","display","getTodoToggle","todoId","getAllToggle","App","filterDescription","toConsumableArray","desc","filteringTodos","handleChangeTodo","filteredTodos","components_Header","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.92fa6ac1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddNewTodo extends React.Component {\n  state = {\n    valuesMap: {\n      title: '',\n    },\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.valuesMap.title) {\n      this.props.onSubmit({\n        ...this.state.valuesMap,\n        completed: false,\n        id: new Date(),\n      });\n      this.setState({\n        valuesMap: {\n          title: '',\n        },\n      });\n    }\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      valuesMap: {\n        ...prevState.valuesMap,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { valuesMap } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          onChange={this.handleFieldChange}\n          value={valuesMap.title}\n          name=\"title\"\n          autoComplete=\"off\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nAddNewTodo.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nAddNewTodo.defaultProps = {\n  onSubmit: () => {},\n};\n\nexport default AddNewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTodo from './NewTodo';\n\nconst Header = ({ addTodo, todos }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <NewTodo\n      onSubmit={addTodo}\n      todos={todos}\n    />\n\n  </header>\n);\n\nHeader.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  addTodo: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    currentTitle: '',\n    currentId: null,\n  }\n\n  handleStartEditing = () => {\n    this.setState({\n      isEditing: true,\n      currentTitle: this.props.todo.title,\n      currentId: this.props.todo.id,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { currentTitle, currentId } = this.state;\n\n    if (this.state.currentTitle) {\n      this.props.onChangeSubmit(currentTitle, currentId);\n\n      this.setState({\n        currentTitle: '',\n        isEditing: false,\n      });\n    }\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const { todo, handleTodoToggle, handleDestroyTodo } = this.props;\n    const { isEditing, currentTitle } = this.state;\n\n    return (\n      <li>\n        <div className=\"view\">\n          <input\n            checked={todo.completed}\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={() => handleTodoToggle(todo.id)}\n          />\n\n          {isEditing\n            ? (\n              <form onSubmit={this.handleFormSubmit}>\n                <input\n                  onChange={this.handleFieldChange}\n                  value={currentTitle}\n                  name=\"currentTitle\"\n                  autoComplete=\"off\"\n                  className=\"new-todo\"\n                  placeholder=\"What needs to be done?\"\n                />\n              </form>\n            )\n            : (\n              /* eslint-disable-next-line */\n              <label\n                className={todo.completed ? 'todo--completed' : null}\n                htmlFor={todo.id}\n                onDoubleClick={this.handleStartEditing}\n              >\n                {todo.title}\n\n              </label>\n            )\n          }\n\n          <button\n            onClick={() => handleDestroyTodo(todo.id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  }).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  onChangeSubmit: PropTypes.func,\n};\n\nTodoItem.defaultProps = {\n  handleTodoToggle: () => {},\n  handleDestroyTodo: () => {},\n  onChangeSubmit: () => {},\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    allToggle,\n    todos,\n    handleTodoToggle,\n    handleAllToggle,\n    handleDestroyTodo,\n    onChangeSubmit,\n  } = props;\n\n  const getClassesAllToggle = classnames(\n    {\n      'toggle-all': true,\n      'toggle-all--active': allToggle,\n    }\n  );\n\n  return (\n    <section className=\"main\">\n\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className={getClassesAllToggle}\n        onChange={handleAllToggle}\n      />\n\n      {/* eslint-disable-next-line */}\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n\n        {todos.map(todoItem => (\n          <TodoItem\n            key={todoItem.id}\n            todo={todoItem}\n            handleTodoToggle={handleTodoToggle}\n            handleDestroyTodo={handleDestroyTodo}\n            onChangeSubmit={onChangeSubmit}\n          />\n        ))}\n\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  allToggle: PropTypes.bool,\n  handleTodoToggle: PropTypes.func,\n  handleAllToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  onChangeSubmit: PropTypes.func,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n};\n\nTodoList.defaultProps = {\n  handleTodoToggle: () => {},\n  handleAllToggle: () => {},\n  handleDestroyTodo: () => {},\n  onChangeSubmit: () => {},\n  allToggle: false,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const {\n    todos,\n    handleDestroyCompleted,\n    handleFilter,\n  } = props;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => !todo.completed).length}`}\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => handleFilter('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className=\"selected\"\n            onClick={() => handleFilter('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className=\"selected\"\n            onClick={() => handleFilter('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDestroyCompleted}\n          style={{ display: 'block' }}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  handleDestroyCompleted: PropTypes.func,\n  handleFilter: PropTypes.func,\n};\n\nFooter.defaultProps = {\n  handleDestroyCompleted: () => {},\n  handleFilter: () => {},\n};\n\nexport default Footer;\n","export const getTodoToggle = (todos, todoId) => (\n  todos.map(todo => (\n    todo.id !== todoId\n      ? todo\n      : { ...todo, completed: !todo.completed }\n  ))\n);\n\nexport const getAllToggle = (todos, allToggle) => (\n  todos.map(todo => (\n    allToggle === false\n      ? { ...todo, completed: true }\n      : { ...todo, completed: false }\n  ))\n);\n","import React from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\nimport { getTodoToggle, getAllToggle } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    allToggle: false,\n    filterDescription: '',\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n\n  handleTodoToggle = (todoId) => {\n    this.setState(prevState => ({\n      todos: getTodoToggle(prevState.todos, todoId),\n    }));\n  };\n\n  handleAllToggle = () => {\n    this.setState(prevState => ({\n      allToggle: !prevState.allToggle,\n      todos: getAllToggle(prevState.todos, prevState.allToggle),\n    }));\n  };\n\n  handleDestroyTodo = (todoId) => {\n    this.setState(prevState => ({\n      allToggle: !prevState.todos.length === 0,\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  handleDestroyCompleted = () => {\n    this.setState(prevState => ({\n      allToggle: !prevState.todos.length === 0,\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  handleFilter = (desc) => {\n    this.setState({\n      filterDescription: desc,\n    });\n  };\n\n  filteringTodos = (desc) => {\n    const { todos } = this.state;\n    \n    switch (desc) {\n      case 'active':\n        return [...todos].filter(todo => !todo.completed);\n\n      case 'completed':\n        return [...todos].filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  handleChangeTodo = (title, id) => {\n    this.setState(prevState => ({\n      filteredTodos: prevState.filteredTodos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, title }\n      )),\n      todos: prevState.todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, title }\n      )),\n    }));\n  };\n\n  render() {\n    const {\n      allToggle,\n      filterDescription,\n    } = this.state;\n\n    const filteredTodos = this.filteringTodos(filterDescription);\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={filteredTodos}\n          addTodo={this.addTodo}\n        />\n\n        <TodoList\n          todos={filteredTodos}\n          allToggle={allToggle}\n          filterDescription={filterDescription}\n          handleTodoToggle={this.handleTodoToggle}\n          handleAllToggle={this.handleAllToggle}\n          handleDestroyTodo={this.handleDestroyTodo}\n          onChangeSubmit={this.handleChangeTodo}\n        />\n\n        {filteredTodos.length > 0 && (\n\n          <Footer\n            todos={filteredTodos}\n            handleDestroyCompleted={this.handleDestroyCompleted}\n            handleFilter={this.handleFilter}\n          />\n\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}