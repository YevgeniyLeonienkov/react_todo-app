{"version":3,"sources":["components/NewTodo.jsx","components/Header.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","App.js","index.js"],"names":["AddNewTodo","state","valuesMap","title","handleFormSubmit","event","preventDefault","_this","setState","prevState","props","onSubmit","Object","objectSpread","completed","id","Date","handleFieldChange","_event$target","target","name","value","defineProperty","this","react_default","a","createElement","onChange","autoComplete","className","placeholder","React","Component","defaultProps","Header","_ref","addTodo","todos","NewTodo","TodoItem","todo","handleTodoToggle","handleDestroyTodo","checked","type","htmlFor","onClick","TodoList","filteredTodos","filterDescription","handleAllToggle","style","display","map","todoItem","components_TodoItem","key","Footer","isCompleted","handleDestroyCompleted","handleFilter","concat","filter","length","href","App","footerVisibility","allToggle","toConsumableArray","todoId","desc","_this$state","components_Header","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.84f568c0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddNewTodo extends React.Component {\n  state = {\n    valuesMap: {\n      title: '',\n    },\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      this.props.onSubmit({\n        ...prevState.valuesMap,\n        completed: false,\n        id: new Date(),\n      });\n    });\n\n    this.setState({\n      valuesMap: {\n        title: '',\n      },\n    });\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      valuesMap: {\n        ...prevState.valuesMap,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { valuesMap } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          onChange={this.handleFieldChange}\n          value={valuesMap.title}\n          name=\"title\"\n          autoComplete=\"off\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nAddNewTodo.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nAddNewTodo.defaultProps = {\n  onSubmit: () => {},\n};\n\nexport default AddNewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTodo from './NewTodo';\n\nconst Header = ({ addTodo, todos }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <NewTodo\n      onSubmit={addTodo}\n      todos={todos}\n    />\n\n  </header>\n);\n\nHeader.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  addTodo: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, handleTodoToggle, handleDestroyTodo }) => (\n  <li className=\"\">\n    <div className=\"view\">\n      <input\n        checked={todo.completed}\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        onChange={() => handleTodoToggle(todo.id)}\n      />\n      <label\n        className={todo.completed ? 'todo--completed' : null}\n        htmlFor={todo.id}\n      >\n        {todo.title}\n\n      </label>\n\n      <button\n        onClick={() => handleDestroyTodo(todo.id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  }).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n};\n\nTodoItem.defaultProps = {\n  handleTodoToggle: () => {},\n  handleDestroyTodo: () => {},\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    filteredTodos,\n    filterDescription,\n    handleTodoToggle,\n    handleAllToggle,\n    handleDestroyTodo,\n  } = props;\n\n  let { todos } = props;\n\n  if (filterDescription === 'active' || filterDescription === 'completed') {\n    todos = filteredTodos;\n  }\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={() => handleAllToggle()}\n      />\n\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n\n        {todos.map(todoItem => (\n          <TodoItem\n            key={todoItem.id}\n            todo={todoItem}\n            handleTodoToggle={handleTodoToggle}\n            handleDestroyTodo={handleDestroyTodo}\n          />\n        ))}\n\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleAllToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  filterDescription: PropTypes.string,\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })),\n};\n\nTodoList.defaultProps = {\n  handleTodoToggle: () => {},\n  handleAllToggle: () => {},\n  handleDestroyTodo: () => {},\n  filterDescription: '',\n  filteredTodos: [],\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const {\n    todos,\n    isCompleted,\n    handleDestroyCompleted,\n    handleFilter,\n  } = props;\n\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => (!todo.completed)).length}`}\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => handleFilter('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className=\"selected\"\n            onClick={() => handleFilter('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className=\"selected\"\n            onClick={() => handleFilter('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {isCompleted && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDestroyCompleted}\n          style={{ display: 'block' }}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  isCompleted: PropTypes.bool,\n  handleDestroyCompleted: PropTypes.func,\n  handleFilter: PropTypes.func,\n};\n\nFooter.defaultProps = {\n  isCompleted: false,\n  handleDestroyCompleted: () => {},\n  handleFilter: () => {},\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    footerVisibility: false,\n    allToggle: false,\n    isCompleted: false,\n    filterDescription: '',\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      footerVisibility: true,\n    }));\n  };\n\n  handleTodoToggle = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== todoId\n          ? todo\n          : { ...todo, completed: !todo.completed }\n      )),\n      isCompleted: !prevState.isCompleted,\n    }));\n  };\n\n  handleAllToggle = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        prevState.allToggle === false\n          ? { ...todo, completed: true }\n          : { ...todo, completed: false }\n      )),\n      allToggle: !prevState.allToggle,\n      isCompleted: !prevState.isCompleted,\n    }));\n  };\n\n  handleDestroyTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  handleDestroyCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.completed === false),\n    }));\n  };\n\n  handleFilter = (desc) => {\n    this.setState((prevState) => {\n      switch (desc) {\n        case 'all':\n          return ({\n            filteredTodos: prevState.todos,\n            filterDescription: 'all',\n          });\n\n        case 'active':\n          return ({\n            filteredTodos: prevState.todos.filter(todo => !todo.completed),\n            filterDescription: 'active',\n          });\n\n        case 'completed':\n          return ({\n            filteredTodos: prevState.todos.filter(todo => todo.completed),\n            filterDescription: 'completed',\n          });\n\n        default:\n          return ({});\n      }\n    });\n  };\n\n  render() {\n    const {\n      todos,\n      footerVisibility,\n      isCompleted,\n      filteredTodos,\n      filterDescription,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={todos}\n          addTodo={this.addTodo}\n        />\n\n        <TodoList\n          todos={todos}\n          filteredTodos={filteredTodos}\n          filterDescription={filterDescription}\n          handleTodoToggle={this.handleTodoToggle}\n          handleAllToggle={this.handleAllToggle}\n          handleDestroyTodo={this.handleDestroyTodo}\n        />\n\n        {footerVisibility && (\n\n          <Footer\n            todos={todos}\n            isCompleted={isCompleted}\n            handleDestroyCompleted={this.handleDestroyCompleted}\n            handleFilter={this.handleFilter}\n          />\n\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}