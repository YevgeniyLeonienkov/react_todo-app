{"version":3,"sources":["components/NewTodo.jsx","components/Header.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","utils.js","App.js","index.js"],"names":["AddNewTodo","state","valuesMap","title","handleFormSubmit","event","preventDefault","_this","props","onSubmit","Object","objectSpread","completed","id","Date","getTime","setState","handleFieldChange","_event$target","target","name","value","prevState","defineProperty","this","react_default","a","createElement","onChange","autoComplete","className","placeholder","React","Component","defaultProps","Header","_ref","addTodo","todos","NewTodo","TodoItem","isEditing","currentTitle","handleStartEditing","todo","onChangeSubmit","_this$props","handleTodoToggle","handleDestroyTodo","_this$state","checked","type","htmlFor","onDoubleClick","onClick","TodoList","allToggle","handleAllToggle","getClassesAllToggle","classnames","toggle-all","toggle-all--active","map","todoItem","components_TodoItem","key","Footer","handleDestroyCompleted","handleSetDesc","concat","filter","length","href","some","style","display","getTodoToggle","todoId","getAllToggle","App","filterDescription","toConsumableArray","desc","filteringTodos","handleChangeTodo","filteredTodos","components_Header","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4bbb006c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddNewTodo extends React.Component {\n  state = {\n    valuesMap: {\n      title: '',\n    },\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.valuesMap.title) {\n      this.props.onSubmit({\n        ...this.state.valuesMap,\n        completed: false,\n        id: new Date().getTime(),\n      });\n      this.setState({\n        valuesMap: {\n          title: '',\n        },\n      });\n    }\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      valuesMap: {\n        ...prevState.valuesMap,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { valuesMap } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          onChange={this.handleFieldChange}\n          value={valuesMap.title}\n          name=\"title\"\n          autoComplete=\"off\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nAddNewTodo.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nAddNewTodo.defaultProps = {\n  onSubmit: () => {},\n};\n\nexport default AddNewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTodo from './NewTodo';\n\nconst Header = ({ addTodo, todos }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <NewTodo\n      onSubmit={addTodo}\n      todos={todos}\n    />\n\n  </header>\n);\n\nHeader.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n  })).isRequired,\n  addTodo: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    currentTitle: '',\n  }\n\n  handleStartEditing = () => {\n    this.setState({\n      isEditing: true,\n      currentTitle: this.props.todo.title,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { currentTitle } = this.state;\n\n    if (currentTitle) {\n      this.props.onChangeSubmit(currentTitle, this.props.todo.id);\n\n      this.setState({\n        currentTitle: '',\n        isEditing: false,\n      });\n    }\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const { todo, handleTodoToggle, handleDestroyTodo } = this.props;\n    const { isEditing, currentTitle } = this.state;\n\n    return (\n      <li>\n        <div className=\"view\">\n          <input\n            checked={todo.completed}\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todo.id}\n            onChange={() => handleTodoToggle(todo.id)}\n          />\n\n          {isEditing\n            ? (\n              <form onSubmit={this.handleFormSubmit}>\n                <input\n                  onChange={this.handleFieldChange}\n                  value={currentTitle}\n                  name=\"currentTitle\"\n                  autoComplete=\"off\"\n                  className=\"new-todo\"\n                  placeholder=\"What needs to be done?\"\n                />\n              </form>\n            )\n            : (\n              /* eslint-disable-next-line */\n              <label\n                className={todo.completed ? 'todo--completed' : null}\n                htmlFor={todo.id}\n                onDoubleClick={this.handleStartEditing}\n              >\n                {todo.title}\n\n              </label>\n            )\n          }\n\n          <button\n            onClick={() => handleDestroyTodo(todo.id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n  }).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  onChangeSubmit: PropTypes.func,\n};\n\nTodoItem.defaultProps = {\n  handleTodoToggle: () => {},\n  handleDestroyTodo: () => {},\n  onChangeSubmit: () => {},\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    allToggle,\n    todos,\n    handleTodoToggle,\n    handleAllToggle,\n    handleDestroyTodo,\n    onChangeSubmit,\n  } = props;\n\n  const getClassesAllToggle = classnames(\n    {\n      'toggle-all': true,\n      'toggle-all--active': allToggle,\n    }\n  );\n\n  return (\n    <section className=\"main\">\n\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className={getClassesAllToggle}\n        onChange={handleAllToggle}\n      />\n\n      {/* eslint-disable-next-line */}\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n\n        {todos.map(todoItem => (\n          <TodoItem\n            key={todoItem.id}\n            todo={todoItem}\n            handleTodoToggle={handleTodoToggle}\n            handleDestroyTodo={handleDestroyTodo}\n            onChangeSubmit={onChangeSubmit}\n          />\n        ))}\n\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  allToggle: PropTypes.bool,\n  handleTodoToggle: PropTypes.func,\n  handleAllToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  onChangeSubmit: PropTypes.func,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n  })).isRequired,\n};\n\nTodoList.defaultProps = {\n  handleTodoToggle: () => {},\n  handleAllToggle: () => {},\n  handleDestroyTodo: () => {},\n  onChangeSubmit: () => {},\n  allToggle: false,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const {\n    todos,\n    handleDestroyCompleted,\n    handleSetDesc,\n  } = props;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => !todo.completed).length}`}\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => handleSetDesc('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className=\"selected\"\n            onClick={() => handleSetDesc('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className=\"selected\"\n            onClick={() => handleSetDesc('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDestroyCompleted}\n          style={{ display: 'block' }}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n  })).isRequired,\n  handleDestroyCompleted: PropTypes.func,\n  handleSetDesc: PropTypes.func,\n};\n\nFooter.defaultProps = {\n  handleDestroyCompleted: () => {},\n  handleSetDesc: () => {},\n};\n\nexport default Footer;\n","export const getTodoToggle = (todos, todoId) => (\n  todos.map(todo => (\n    todo.id !== todoId\n      ? todo\n      : { ...todo, completed: !todo.completed }\n  ))\n);\n\nexport const getAllToggle = (todos, allToggle) => (\n  todos.map(todo => (\n    !allToggle\n      ? { ...todo, completed: true }\n      : { ...todo, completed: false }\n  ))\n);\n","import React from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\nimport { getTodoToggle, getAllToggle } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    allToggle: false,\n    filterDescription: '',\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  };\n\n  handleTodoToggle = (todoId) => {\n    this.setState(prevState => ({\n      todos: getTodoToggle(prevState.todos, todoId),\n    }));\n  };\n\n  handleAllToggle = () => {\n    this.setState(prevState => ({\n      allToggle: !prevState.allToggle,\n      todos: getAllToggle(prevState.todos, prevState.allToggle),\n    }));\n  };\n\n  handleDestroyTodo = (todoId) => {\n    this.setState(prevState => ({\n      allToggle: prevState.todos.length === 0,\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  handleDestroyCompleted = () => {\n    this.setState(prevState => ({\n      allToggle: prevState.todos.length === 0,\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  handleSetDesc = (desc) => {\n    this.setState({\n      filterDescription: desc,\n    });\n  };\n\n  filteringTodos = (desc) => {\n    const { todos } = this.state;\n\n    switch (desc) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  handleChangeTodo = (title, id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== id\n          ? todo\n          : { ...todo, title }\n      )),\n    }));\n  };\n\n  render() {\n    const {\n      todos,\n      allToggle,\n      filterDescription,\n    } = this.state;\n\n    const filteredTodos = this.filteringTodos(filterDescription);\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={filteredTodos}\n          addTodo={this.addTodo}\n        />\n\n        <TodoList\n          todos={filteredTodos}\n          allToggle={allToggle}\n          filterDescription={filterDescription}\n          handleTodoToggle={this.handleTodoToggle}\n          handleAllToggle={this.handleAllToggle}\n          handleDestroyTodo={this.handleDestroyTodo}\n          onChangeSubmit={this.handleChangeTodo}\n        />\n\n        {todos.length > 0 && (\n\n          <Footer\n            todos={filteredTodos}\n            handleDestroyCompleted={this.handleDestroyCompleted}\n            handleSetDesc={this.handleSetDesc}\n          />\n\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}