{"version":3,"sources":["components/NewTodo.jsx","components/Header.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Footer.jsx","App.js","index.js"],"names":["AddNewTodo","state","valuesMap","title","handleFormSubmit","event","preventDefault","_this","props","onSubmit","Object","objectSpread","completed","id","Date","setState","handleFieldChange","_event$target","target","name","value","prevState","defineProperty","this","react_default","a","createElement","onChange","autoComplete","className","placeholder","React","Component","defaultProps","Header","_ref","addTodo","todos","NewTodo","TodoItem","todo","handleTodoToggle","handleDestroyTodo","checked","type","htmlFor","onClick","TodoList","filteredTodos","filterDescription","handleAllToggle","shownTodos","toConsumableArray","map","todoItem","components_TodoItem","key","Footer","handleDestroyCompleted","handleFilter","style","display","concat","filter","length","href","some","App","footerVisibility","allToggle","todoId","desc","_this$state","components_Header","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"yRAGMA,6MACJC,MAAQ,CACNC,UAAW,CACTC,MAAO,OAIXC,iBAAmB,SAACC,GAClBA,EAAMC,iBAEFC,EAAKN,MAAMC,UAAUC,QACvBI,EAAKC,MAAMC,SAAXC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAKN,MAAMC,UADhB,CAEEU,WAAW,EACXC,GAAI,IAAIC,QAEVP,EAAKQ,SAAS,CACZb,UAAW,CACTC,MAAO,UAMfa,kBAAoB,SAACX,GAAU,IAAAY,EACLZ,EAAMa,OAAtBC,EADqBF,EACrBE,KAAMC,EADeH,EACfG,MAEdb,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BnB,UAAUQ,OAAAC,EAAA,EAAAD,CAAA,GACLW,EAAUnB,UADNQ,OAAAY,EAAA,EAAAZ,CAAA,GAENS,EAAOC,gFAKL,IACClB,EAAcqB,KAAKtB,MAAnBC,UAER,OACEsB,EAAAC,EAAAC,cAAA,QAAMjB,SAAUc,KAAKnB,kBACnBoB,EAAAC,EAAAC,cAAA,SACEC,SAAUJ,KAAKP,kBACfI,MAAOlB,EAAUC,MACjBgB,KAAK,QACLS,aAAa,MACbC,UAAU,WACVC,YAAY,mCA9CGC,IAAMC,WAyD/BhC,EAAWiC,aAAe,CACxBxB,SAAU,cAGGT,QC5DTkC,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,MAAZ,OACbb,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAChBL,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAACY,EAAD,CACE7B,SAAU2B,EACVC,MAAOA,MAebH,EAAOD,aAAe,CACpBG,QAAS,cAGIF,QC1BTK,EAAW,SAAAJ,GAAA,IAAGK,EAAHL,EAAGK,KAAMC,EAATN,EAASM,iBAAkBC,EAA3BP,EAA2BO,kBAA3B,OACflB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,IACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACbL,EAAAC,EAAAC,cAAA,SACEiB,QAASH,EAAK5B,UACdgC,KAAK,WACLf,UAAU,SACVhB,GAAI2B,EAAK3B,GACTc,SAAU,kBAAMc,EAAiBD,EAAK3B,OAGxCW,EAAAC,EAAAC,cAAA,SACEG,UAAWW,EAAK5B,UAAY,kBAAoB,KAChDiC,QAASL,EAAK3B,IAEb2B,EAAKrC,OAIRqB,EAAAC,EAAAC,cAAA,UACEoB,QAAS,kBAAMJ,EAAkBF,EAAK3B,KACtC+B,KAAK,SACLf,UAAU,eAgBlBU,EAASN,aAAe,CACtBQ,iBAAkB,aAClBC,kBAAmB,cAGNH,QC1CTQ,EAAW,SAACvC,GAAU,IAExB6B,EAME7B,EANF6B,MACAW,EAKExC,EALFwC,cACAC,EAIEzC,EAJFyC,kBACAR,EAGEjC,EAHFiC,iBACAS,EAEE1C,EAFF0C,gBACAR,EACElC,EADFkC,kBAGES,EAAUzC,OAAA0C,EAAA,EAAA1C,CAAO2B,GAMrB,MAJ0B,WAAtBY,GAAwD,cAAtBA,IACpCE,EAAaH,GAIbxB,EAAAC,EAAAC,cAAA,WAASG,UAAU,QAEjBL,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACL/B,GAAG,aACHgB,UAAU,aACVF,SAAUuB,IAIZ1B,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,cAAf,wBACArB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,aAEXsB,EAAWE,IAAI,SAAAC,GAAQ,OACtB9B,EAAAC,EAAAC,cAAC6B,EAAD,CACEC,IAAKF,EAASzC,GACd2B,KAAMc,EACNb,iBAAkBA,EAClBC,kBAAmBA,SA0B/BK,EAASd,aAAe,CACtBQ,iBAAkB,aAClBS,gBAAiB,aACjBR,kBAAmB,aACnBO,kBAAmB,GACnBD,cAAe,IAGFD,QCtETU,EAAS,SAACjD,GAAU,IAEtB6B,EAGE7B,EAHF6B,MACAqB,EAEElD,EAFFkD,uBACAC,EACEnD,EADFmD,aAGF,OACEnC,EAAAC,EAAAC,cAAA,UAAQG,UAAU,SAAS+B,MAAO,CAAEC,QAAS,UAC3CrC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAhB,GAAAiC,OACMzB,EAAM0B,OAAO,SAAAvB,GAAI,OAAKA,EAAK5B,YAAWoD,QACzC,eAGHxC,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEuC,KAAK,KACLpC,UAAU,WACViB,QAAS,kBAAMa,EAAa,SAH9B,QASFnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEuC,KAAK,WACLpC,UAAU,WACViB,QAAS,kBAAMa,EAAa,YAH9B,WASFnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEuC,KAAK,cACLpC,UAAU,WACViB,QAAS,kBAAMa,EAAa,eAH9B,eAUHtB,EAAM6B,KAAK,SAAA1B,GAAI,OAAIA,EAAK5B,aACvBY,EAAAC,EAAAC,cAAA,UACEkB,KAAK,SACLf,UAAU,kBACViB,QAASY,EACTE,MAAO,CAAEC,QAAS,UAJpB,qBAwBRJ,EAAOxB,aAAe,CACpByB,uBAAwB,aACxBC,aAAc,cAGDF,QCyCAU,6MAlHblE,MAAQ,CACNoC,MAAO,GACPW,cAAe,GACfoB,kBAAkB,EAClBC,WAAW,EACXpB,kBAAmB,MAGrBb,QAAU,SAACI,GACTjC,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BgB,MAAK,GAAAyB,OAAApD,OAAA0C,EAAA,EAAA1C,CAAMW,EAAUgB,OAAhB,CAAuBG,IAC5B4B,kBAAkB,QAItB3B,iBAAmB,SAAC6B,GAClB/D,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BgB,MAAOhB,EAAUgB,MAAMgB,IAAI,SAAAb,GAAI,OAC7BA,EAAK3B,KAAOyD,EACR9B,EADJ9B,OAAAC,EAAA,EAAAD,CAAA,GAES8B,EAFT,CAEe5B,WAAY4B,EAAK5B,oBAKtCsC,gBAAkB,WAChB3C,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BgB,MAAOhB,EAAUgB,MAAMgB,IAAI,SAAAb,GAAI,OACL,IAAxBnB,EAAUgD,UAAV3D,OAAAC,EAAA,EAAAD,CAAA,GACS8B,EADT,CACe5B,WAAW,IAD1BF,OAAAC,EAAA,EAAAD,CAAA,GAES8B,EAFT,CAEe5B,WAAW,MAE5ByD,WAAYhD,EAAUgD,gBAI1B3B,kBAAoB,SAAC4B,GACnB/D,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BgB,MAAOhB,EAAUgB,MAAM0B,OAAO,SAAAvB,GAAI,OAAIA,EAAK3B,KAAOyD,UAItDZ,uBAAyB,WACvBnD,EAAKQ,SAAS,SAAAM,GAAS,MAAK,CAC1BgB,MAAOhB,EAAUgB,MAAM0B,OAAO,SAAAvB,GAAI,OAAKA,EAAK5B,kBAIhD+C,aAAe,SAACY,GACdhE,EAAKQ,SAAS,SAACM,GACb,OAAQkD,GACN,IAAK,MACH,MAAQ,CACNvB,cAAe3B,EAAUgB,MACzBY,kBAAmBsB,GAGvB,IAAK,SACH,MAAQ,CACNvB,cAAe3B,EAAUgB,MAAM0B,OAAO,SAAAvB,GAAI,OAAKA,EAAK5B,YACpDqC,kBAAmBsB,GAGvB,IAAK,YACH,MAAQ,CACNvB,cAAe3B,EAAUgB,MAAM0B,OAAO,SAAAvB,GAAI,OAAIA,EAAK5B,YACnDqC,kBAAmBsB,GAGvB,QACE,MAAQ,+EAKP,IAAAC,EAMHjD,KAAKtB,MAJPoC,EAFKmC,EAELnC,MACA+B,EAHKI,EAGLJ,iBACApB,EAJKwB,EAILxB,cACAC,EALKuB,EAKLvB,kBAGF,OACEzB,EAAAC,EAAAC,cAAA,WAASG,UAAU,WAEjBL,EAAAC,EAAAC,cAAC+C,EAAD,CACEpC,MAAOA,EACPD,QAASb,KAAKa,UAGhBZ,EAAAC,EAAAC,cAACgD,EAAD,CACErC,MAAOA,EACPW,cAAeA,EACfC,kBAAmBA,EACnBR,iBAAkBlB,KAAKkB,iBACvBS,gBAAiB3B,KAAK2B,gBACtBR,kBAAmBnB,KAAKmB,oBAGzB0B,GAEC5C,EAAAC,EAAAC,cAACiD,EAAD,CACEtC,MAAOA,EACPqB,uBAAwBnC,KAAKmC,uBAC7BC,aAAcpC,KAAKoC,uBA1Gb5B,IAAMC,WCCxB4C,IAASC,OACPrD,EAAAC,EAAAC,cAACoD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.51ead979.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddNewTodo extends React.Component {\n  state = {\n    valuesMap: {\n      title: '',\n    },\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.valuesMap.title) {\n      this.props.onSubmit({\n        ...this.state.valuesMap,\n        completed: false,\n        id: new Date(),\n      });\n      this.setState({\n        valuesMap: {\n          title: '',\n        },\n      });\n    }\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      valuesMap: {\n        ...prevState.valuesMap,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const { valuesMap } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <input\n          onChange={this.handleFieldChange}\n          value={valuesMap.title}\n          name=\"title\"\n          autoComplete=\"off\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nAddNewTodo.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nAddNewTodo.defaultProps = {\n  onSubmit: () => {},\n};\n\nexport default AddNewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTodo from './NewTodo';\n\nconst Header = ({ addTodo, todos }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <NewTodo\n      onSubmit={addTodo}\n      todos={todos}\n    />\n\n  </header>\n);\n\nHeader.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  addTodo: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  addTodo: () => {},\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, handleTodoToggle, handleDestroyTodo }) => (\n  <li className=\"\">\n    <div className=\"view\">\n      <input\n        checked={todo.completed}\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        onChange={() => handleTodoToggle(todo.id)}\n      />\n      {/* eslint-disable-next-line */}\n      <label\n        className={todo.completed ? 'todo--completed' : null}\n        htmlFor={todo.id}\n      >\n        {todo.title}\n\n      </label>\n\n      <button\n        onClick={() => handleDestroyTodo(todo.id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  }).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n};\n\nTodoItem.defaultProps = {\n  handleTodoToggle: () => {},\n  handleDestroyTodo: () => {},\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n  const {\n    todos,\n    filteredTodos,\n    filterDescription,\n    handleTodoToggle,\n    handleAllToggle,\n    handleDestroyTodo,\n  } = props;\n\n  let shownTodos = [...todos];\n\n  if (filterDescription === 'active' || filterDescription === 'completed') {\n    shownTodos = filteredTodos;\n  }\n\n  return (\n    <section className=\"main\">\n\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={handleAllToggle}\n      />\n\n      {/* eslint-disable-next-line */}\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <ul className=\"todo-list\">\n\n        {shownTodos.map(todoItem => (\n          <TodoItem\n            key={todoItem.id}\n            todo={todoItem}\n            handleTodoToggle={handleTodoToggle}\n            handleDestroyTodo={handleDestroyTodo}\n          />\n        ))}\n\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  handleTodoToggle: PropTypes.func,\n  handleAllToggle: PropTypes.func,\n  handleDestroyTodo: PropTypes.func,\n  filterDescription: PropTypes.string,\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })),\n};\n\nTodoList.defaultProps = {\n  handleTodoToggle: () => {},\n  handleAllToggle: () => {},\n  handleDestroyTodo: () => {},\n  filterDescription: '',\n  filteredTodos: [],\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const {\n    todos,\n    handleDestroyCompleted,\n    handleFilter,\n  } = props;\n\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => !todo.completed).length}`}\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={() => handleFilter('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className=\"selected\"\n            onClick={() => handleFilter('active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className=\"selected\"\n            onClick={() => handleFilter('completed')}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDestroyCompleted}\n          style={{ display: 'block' }}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.instanceOf(Date),\n  })).isRequired,\n  handleDestroyCompleted: PropTypes.func,\n  handleFilter: PropTypes.func,\n};\n\nFooter.defaultProps = {\n  handleDestroyCompleted: () => {},\n  handleFilter: () => {},\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    footerVisibility: false,\n    allToggle: false,\n    filterDescription: '',\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      footerVisibility: true,\n    }));\n  };\n\n  handleTodoToggle = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id !== todoId\n          ? todo\n          : { ...todo, completed: !todo.completed }\n      )),\n    }));\n  };\n\n  handleAllToggle = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        prevState.allToggle === false\n          ? { ...todo, completed: true }\n          : { ...todo, completed: false }\n      )),\n      allToggle: !prevState.allToggle,\n    }));\n  };\n\n  handleDestroyTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  handleDestroyCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  handleFilter = (desc) => {\n    this.setState((prevState) => {\n      switch (desc) {\n        case 'all':\n          return ({\n            filteredTodos: prevState.todos,\n            filterDescription: desc,\n          });\n\n        case 'active':\n          return ({\n            filteredTodos: prevState.todos.filter(todo => !todo.completed),\n            filterDescription: desc,\n          });\n\n        case 'completed':\n          return ({\n            filteredTodos: prevState.todos.filter(todo => todo.completed),\n            filterDescription: desc,\n          });\n\n        default:\n          return ({});\n      }\n    });\n  };\n\n  render() {\n    const {\n      todos,\n      footerVisibility,\n      filteredTodos,\n      filterDescription,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          todos={todos}\n          addTodo={this.addTodo}\n        />\n\n        <TodoList\n          todos={todos}\n          filteredTodos={filteredTodos}\n          filterDescription={filterDescription}\n          handleTodoToggle={this.handleTodoToggle}\n          handleAllToggle={this.handleAllToggle}\n          handleDestroyTodo={this.handleDestroyTodo}\n        />\n\n        {footerVisibility && (\n\n          <Footer\n            todos={todos}\n            handleDestroyCompleted={this.handleDestroyCompleted}\n            handleFilter={this.handleFilter}\n          />\n\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}